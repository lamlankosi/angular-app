import type { ModuleContext } from '../../module/moduleContext';
import { CategoryScale } from '../../scale/categoryScale';
import type { OrdinalTimeScale } from '../../scale/ordinalTimeScale';
import { CartesianAxis } from './cartesianAxis';
export declare class CategoryAxis<S extends CategoryScale<string | object> | OrdinalTimeScale = CategoryScale<string | object>> extends CartesianAxis<S> {
    static is(this: void, value: unknown): value is CategoryAxis<any>;
    static readonly className: string;
    static readonly type: 'category' | 'grouped-category' | 'ordinal-time';
    constructor(moduleCtx: ModuleContext, scale?: S);
    groupPaddingInner: number;
    paddingInner?: number;
    paddingOuter?: number;
    normaliseDataDomain(domain: Array<string | object>): {
        domain: (string | object)[];
        clipped: boolean;
    };
    protected updateScale(): void;
    private reduceBandScalePadding;
}
